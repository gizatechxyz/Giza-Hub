mod xgb_inference;

fn main(input_vector: Span<i32>) -> i32 {
    let tree_0 = xgb_inference::Tree {
    base_weights: array![0, -3552351, 5144785, -5282977, 1074167, 3705116, 11299444, -7140181, -4339292, -1588488, 2628337, 2180691, 7452042, 3907488, 6401196, -5695252, -2616092, -725301, -4940242, -4039685, 790817, -2878045, 3578648, -2748776, 2865473, -2255241, 8464206, -386048, 7523053, -6686708, 401077, -1754108, 1295269, -5466483, -236289, -1377418, -2087677, -1204731, 2153711, -977677, -146048, 2083025, 2586775, 719759, -4139447, 1435633, 5559948, -914731, 18952, 8978801, -1046048, 393952, 8222582, -977677, -2155330, -354731, 555269, -118269, -1516572, -1684348, 933952, -1554731, 494416, 156323, -1224731, -196572, 1035346, -858940, 1113009, 708952, -184731, -1540368, 423952, 932640, -273365, 2420535, 421731, -326048, 2809011, 693952, 2646587].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 0, 27, 29, 0, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 0, 51, 53, 55, 57, 0, 59, 61, 63, 0, 0, 65, 0, 0, 67, 0, 69, 71, 73, 75, 0, 0, 77, 0, 0, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 0, 28, 30, 0, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 0, 52, 54, 56, 58, 0, 60, 62, 64, 0, 0, 66, 0, 0, 68, 0, 70, 72, 74, 76, 0, 0, 78, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 8, 2, 8, 2, 9, 5, 4, 4, 8, 3, 8, 8, 0, 4, 4, 0, 8, 5, 2, 3, 2, 7, 6, 3, 0, 5, 0, 2, 9, 0, 9, 0, 3, 8, 4, 0, 0, 6, 0, 0, 8, 0, 0, 4, 2, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![565, 621, 7355, -4257, -2345, 3620, 2249, -3872, -5110, 2473, -4354, -3981, -61, 3907488, 1632, -4560, -2616092, -422, 4535, -2992, -3321, 26, 3800, -2683, 3795, 1991, 19879, -386048, 8541, -7564, -4184, 306, 1295269, 10794, -3452, 944, -2087677, -1204731, -2867, -977677, -146048, 1482, 2586775, -4184, 2045, 3475, 3808, -914731, 18952, -7177, -1046048, 393952, -6727, -977677, -2155330, -354731, 555269, -118269, -1516572, -1684348, 933952, -1554731, 494416, 156323, -1224731, -196572, 1035346, -858940, 1113009, 708952, -184731, -1540368, 423952, 932640, -273365, 2420535, 421731, -326048, 2809011, 693952, 2646587].span()
};
    let tree_1 = xgb_inference::Tree {
    base_weights: array![3397, -2392880, 3955442, -3992107, 366688, 2863091, 8178349, -4592183, -1907249, -19795, 1896745, 1028019, 4748014, 2465912, 2636898, -3662225, -6022549, -148962, -3766118, 2323263, -813716, 3381833, -594502, -2865190, 5262109, 1205125, -328141, -538926, -4536009, -6317431, -181564, -1550392, 1543092, -4461493, 734336, -353890, 5634661, 548767, -2823537, 5372768, -312150, 2500079, -1727338, -44128, -1116657, 2088699, 5907768, 569615, -545867, -1417505, 793859, -754726, -1969307, -1078396, 996692, 1095531, -789489, -1467037, 166604, 340662, -10210, 851012, -691133, 473627, 2219846, -700757, 479047, -496720, -1815296, 1990043, 74235, -665705, 787856, -756644, 407408, 1122174, -397280, 2458492, 1471682].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 0, 21, 23, 25, 0, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 0, 0, 47, 49, 51, 53, 55, 0, 57, 59, 61, 63, 65, 67, 69, 71, 0, 73, 0, 0, 75, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 0, 22, 24, 26, 0, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 0, 0, 48, 50, 52, 54, 56, 0, 58, 60, 62, 64, 66, 68, 70, 72, 0, 74, 0, 0, 76, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 8, 2, 0, 7, 3, 0, 1, 6, 4, 0, 2, 8, 0, 0, 6, 3, 4, 9, 0, 6, 1, 6, 0, 2, 0, 0, 0, 3, 2, 0, 9, 0, 8, 0, 8, 3, 4, 2, 3, 6, 0, 5, 0, 0, 5, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![996, -240, 7355, 3081, 10811, 1729, -5274, 5068, 1919, -1670, 1896745, 3044, -3325, -6000, 2636898, 78, 3334, 806, 1963, -188, 78, 5068, -6917, -2004, 1858, 1205125, -328141, -4547, 7352, -7626, 175, -108, 1543092, -1190, 4534, 200, -109, -570, 242, 810, -3604, 2500079, 5787, -44128, -1116657, 4535, -108, 569615, -545867, -1417505, 793859, -754726, -1969307, -1078396, 996692, 1095531, -789489, -1467037, 166604, 340662, -10210, 851012, -691133, 473627, 2219846, -700757, 479047, -496720, -1815296, 1990043, 74235, -665705, 787856, -756644, 407408, 1122174, -397280, 2458492, 1471682].span()
};
    let num_trees: u32 = 2;
    let base_score: i32 = 15373654;
    let opt_type: u8 = 0;
    let trees: Span<xgb_inference::Tree> = array![tree_0, tree_1].span();
    let mut result: i32 = xgb_inference::accumulate_scores_from_trees(num_trees, trees, input_vector, 0, 0);

    if opt_type == 1 {
        // Implement logic here
    } else {
        result = result + base_score;
    }

    return result;
}